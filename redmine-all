#!/usr/bin/python
"""
Dump DVN Redmine tickets
"""
__version__ = "0.0.1"
import urllib2
import json
import optparse

parser = optparse.OptionParser(version=__version__, description=__doc__)
parser.add_option("-v", "--verbose", action="store_true", dest="verbose",
                help="verbose output")

options, args = parser.parse_args()

base_url = 'https://redmine.hmdc.harvard.edu'

# figure out how many times to iterate
url = base_url+'/issues.json?project_id=1&limit=1'
content = urllib2.urlopen(url)
data = json.load(content)
last_offset = ((data['total_count'] / 100) + 1) * 100

for i in range(0, last_offset, 100):
    url = base_url+'/issues.json?project_id=1&limit=100&offset='+str(i)
    content = urllib2.urlopen(url)
    data = json.load(content)
    for i in data['issues']:
        id = i['id']
        subject = i['subject']
        if 'fixed_version' in i.keys():
            release = i['fixed_version']['name']
        else:
            release = '?.?'
        if 'assigned_to' in i.keys():
            assigned = i['assigned_to']['name']
        else:
            assigned = 'Nobody'
        priority = i['priority']['name']
        if 'tracker' in i.keys():
            tracker = i['tracker']['name']
        else:
            assigned = '?'
        status = i['status']['name']
        done = i['done_ratio']
        link = base_url+'/issues/'+str(id)
        if options.verbose:
            print id, subject.encode('utf-8'), '('+release+')', assigned
            print " -", priority, 'priority', tracker.lower()+',', status.lower(), 'for', release+',', str(done)+"%", 'done'
            print " -", link
            print
        else:
            print id, subject.encode('utf-8'), '('+release+')', assigned
